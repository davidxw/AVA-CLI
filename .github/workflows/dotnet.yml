name: Build and Release

on: workflow_dispatch
  
jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/ava

    steps:        
    - uses: actions/checkout@v2

    - name: Get version number
      uses: naminodarie/get-net-sdk-project-versions-action@v1.1.1
      id: get-version
      with:
        proj-path: src/ava/ava.csproj

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Publish - Windows
      run: dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained true -c Release
    - name: Publish - Linux
      run: dotnet publish -r linux-x64 -p:PublishSingleFile=true --self-contained true -c Release

    - name: Prepare Linux Release
      run: |
        tar czf ava_linux_${{steps.get-version.outputs.version}}.tar.gz bin/Release/net5.0/linux-x64/publish

    - name: Prepare Windows Release
      uses: papeloto/action-zip@v1
      with:
        files: src/ava/bin/Release/net5.0/linux-x64/publish/
        dest: src/ava/ava_win_${{steps.get-version.outputs.version}}.zip

    - name: Create Linux Release
      uses: ncipollo/release-action@v1
      if: ${{ endsWith(steps.get-version.outputs.version, '0') }}
      with:
        artifacts: "src/ava/ava_linux_${{steps.get-version.outputs.version}}.tar.gz"
        name: "Linux x64 ${{steps.get-version.outputs.version}}"
        tag: "v{{steps.get-version.outputs.version}}"
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Windows Release
      uses: ncipollo/release-action@v1
      if: ${{ endsWith(steps.get-version.outputs.version, '0') }}
      with:
        artifacts: "src/ava/ava_win_${{steps.get-version.outputs.version}}.zip"
        name: "Windows x64 ${{steps.get-version.outputs.version}}"
        tag: "v{{steps.get-version.outputs.version}}"
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}
